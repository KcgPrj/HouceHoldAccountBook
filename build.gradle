buildscript {
    ext {
        springBootVersion = '1.4.0.M3'
        kotlinVersion = '1.0.2'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'HouseHoldAccountBook'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    runtime('com.h2database:h2')
    runtime("mysql:mysql-connector-java")

    //webjars
    compile 'org.webjars:webjars-locator'
    compile 'org.webjars:jquery:2.1.1'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'org.assertj:assertj-core:3.4.1'
    testCompile 'com.codeborne:selenide:3.6'

}

kapt {
    generateStubs = false
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}
